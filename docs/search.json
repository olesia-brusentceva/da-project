[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Трішки загального",
    "section": "",
    "text": "Що таке Аналіз Даних?\n\n\nАналіз даних - процес очищення, перетворення та моделювання даних для виявлення корисної інформації та прийняття рішень. Метою аналізу даних є отримання корисної інформації і прийняття рішення на основі аналізу.\n\n\nПростий приклад аналізу даних: щоразу, коли ми приймаємо будь-яке рішення в нашому повсякденному житті, ми думаємо про те, що сталося минулого разу або що станеться, вибравши це конкретне рішення. Це не що інше, як аналіз нашого минулого чи майбутнього та прийняття рішень на його основі. Для цього ми збираємо спогади про наше минуле або мріємо про наше майбутнє. Тож це і є аналіз даних.\n\n\n\n\n\n\n\nЧому Аналіз Даних?\nЩоб розвивати свою справу, або навіть покращувати життя, іноді все, що нам потрібно зробити, це проаналізувати, вже зібрані дані!\nІнструменти аналізу даних:\n\n\n\n\n\n\n\nНаступні 7 кроків зазвичай виконують, щоб проаналізувати дані:\n\n\nВизначення цілей. Визначення чітких цілей допоможе з вибором типу даних для збору та аналізу.\nІнтегрування інструментів для аналізу даних. Ці інструменти можна інтегрувати через API.\nЗбір даних. Потрібно зібрати всі дані в одному місці, щоб їх можна було проаналізувати. Як кількісні, так і якісні дані часто зберігають в Excel.\nОчистка даних. Щоб отримати точні результати, потрібно очистити дані перед аналізом.\nАналіз даних.\nВисновки. Потрібно глибоко зануритися в дані, щоб отримати корисну інформацію. Потім інтерпретувати результати, щоб визначити найкращі варіанти дій.\nВізуалізація. Необхідно представити результати в зрозумілій для всіх формі. Зазвичай використовують графіки, карти, діаграми, маркери та інші методи представлення інформації."
  },
  {
    "objectID": "par1.html",
    "href": "par1.html",
    "title": "Приклад для ознайомлення",
    "section": "",
    "text": "Система баз даних - це комп’ютеризована система зберігання однотипних записів.Саму ж базу даних можна розглядати, як контейнер для деякого набору даних, занесених до комп’ютера.\nБаза даних дозволяє:\n■ додавати нові порожні файли;\n■ вставляти нові дані в наявні файли;\n■ отримувати дані з наявних файлів;\n■ видаляти дані з наявних файлів;\n■ змінювати дані у існуючих файлах;\n■ видаляти наявні файли з бази даних.\nРозглянемо на прикладі бази даних винного сховища деякі операції.\n\n\n\n\n\n\n\n\n\n\n\n\nВибірка\n\n\n\n\n\n\n\nВставка, видалення, додавання\n\n\n\n\n\n\nВибірка, вставка, видалення, додавання\n\n\nЗапити на вибірку, вставку, видалення та оновлення виконані за допомогою операторів SELECT, INSERT, DELETE и UPDATE баз даних SQL(структурована мова запитів). Як правило, стовпці можуть містити дані довільної складності.\nЗокрема, таблицю підвалу можна доповнити новими стовпцями наступних типів, а також багатьох інших типів.\n■ LABLE. Фото етикетки пляшки вина.\n■ REVIEW. Текст огляду якості вина, отриманого з певного магазину вина.\n■ MAP. Карта району, де було зроблено це вино.\n■ NOTES. Звуковий запис, що містить коментарі щодо смаку вина.\nСтовпчик BIN# - це первинний ключ (primary key) таблиці винного сховища (будь -які два рядки цієї таблиці ніколи не міститимуть однакового значення поля BIN#)."
  },
  {
    "objectID": "par2.html",
    "href": "par2.html",
    "title": "Загальне визначення системи бази данних",
    "section": "",
    "text": "Система баз даних - це комп’ютеризована система, яка призначена для збереження інформації. Система баз даних забезпечує зручні засоби для отримання та модифікації необхідної інформації.\nНижче відображено чотири основні компоненти системи бази даних: дані, апаратне забезпечення, програмне забезпечення та користувачі.\n\n\n\nДані в базі даних – це реальні значення даних, що зберігаються в базі даних.\nЗа доступом користувачів до бази даних, системи баз даних є двох видів: однокористувацькі (single user system) та багатокористувацькі (multy user system).\nУ загальному випадку дані в базі даних є інтегрованими і розділяються.\nЩо означає термін “інтегрованість даних”?\n“Інтегрованість даних” – це можливість представити базу даних різними файлами даних, які:\n• можуть бути між собою обʼєднані. Наприклад, база даних реалізована в декількох файлах даних, інформація в яких доповнює одна одну;\n• повністю або частково виключають надлишковість інформації. У цьому випадку структура файлів організована таким чином, що немає потреби задавати додаткову уточнюючу інформацію в одному файлі, яка вже представлена в іншому.\nЩо означає термін “розділюваність даних”?\nРозділюваність даних – це можливість доступу до одного й того ж елементу даних, що розміщується в базі даних, різними користувачами. Користувачі можуть мати паралельний доступ до елементів даних.\nНижче зображено таблицю Worker, яка містить загальну інформацію про співробітника деякої установи. Дані з полів Name, Surname, Patronymic можуть використовуватись у різних відділах установи. Цими відділами можуть бути: відділ бухгалтерії та відділ кадрів.\n\n\n\nАпаратне забезпечення\nАпаратне забезпечення систем баз даних включає в себе дві основні категорії пристроїв:\n• Засоби, що забезпечують зберігання інформації (дисководи, розʼєми для флеш-носії, карти памʼяті, контролери пристроїв, канали вводу-виводу та інше);\n• Засоби, що підтримують роботу програмного забезпечення системи баз даних. До цих засобів відноситься апаратний процесор в поєднанні з основною (первинною) памʼяттю.\nПрограмне забезпечення\nДо програмного забезпечення систем баз даних відносяться:\n• Система керування базами даних СКБД (Database Management System – DBMS). СКБД є рівнем, що звʼязує між собою фізичну базу даних (дані, які реально зберігаються) та користувача системи;\n• Засоби розробки додатків, що взаємодіють з відомими базами даних;\n• Засоби проектування баз даних;\n• Генератори звітів на основі даних, що містяться у базі даних;\n• Менеджер транзакцій (transaction manager) або диспетчер виконання транзакцій (TP monitor).\nКористувачі\nКористувачі бази даних поділяються на 3 взаємозвʼязані групи: прикладні програмісти (розробляють програмне забезпечення, яке використовує базу даних), кінцеві користувачі (працюють з базою даних з допомогою програмного забезпечення, адміністратори баз даних (забезпечують необхідну технічну підтримку бази даних).\nЯк правило, програмне забезпечення чи користувач працює з базою даних за допомогою спеціальної мови запитів SQL (Structured Query Language)."
  },
  {
    "objectID": "par3.html",
    "href": "par3.html",
    "title": "Загальне визначення бази данних",
    "section": "",
    "text": "Перманентні дані\nЗазвичай дані у базі даних називають перманентними. Під словом перманентні маються на увазі дані, які відрізняються від інших, більш мінливих даних, таких як проміжні результати, вхідні та вихідні дані, керуючі оператори, робочі черги, програмні керуючі блоки і взагалі всі дані, тимчасові (transient) за своєю суттю.\nБаза даних - це деякий набір перманентних (постійно збережених) даних.\n\n\nПриклади перманентних даних, які зазвичай зустрічаються.\n\n\n\n\nСфера діяльності\nДані\n\n\n\n\nПримислова компанія\nдані про продукцію\n\n\nБанк\nбухгалтерські дані\n\n\nЛікарня\nдані про пацієнтів\n\n\nУніверситет\nдані про студентів\n\n\nМіністерство\nдані про заплановану діяльність\n\n\n\n\nСьогоднішні підприємства використовують дві окремі бази даних — з операційними даними та даними для підтримки прийняття рішень. Останню зазвичай називають сховищем даних. У сховищах даних часто міститься агрегована інформація (наприклад, підсумкові та середні значення), яка, у свою чергу, періодично (наприклад, раз на добу або раз на тиждень) витягується з операційної бази даних.\n\n\nСутності та зв’язки\nУ теорії баз даних термін сутність зазвичай використовується для позначення будь-якого помітного об’єкта, який може бути представлений у базі даних. Крім сутностей є ще й зв’язки між ними, які поєднують основні сутності.\nНаприклад, між постачальниками та деталями існує зв’язок кожен постачальник поставляє певні деталі, і навпаки, кожна деталь поставляється певними постачальниками. Аналогічно, деталі використовуються в проектах, а для реалізації проектів потрібні деталі.\n\n\nВластивості\nСутності (а отже, і зв’язки) мають деякі властивості, що відповідають тим даним про них, які необхідно зберігати в базі.\nНаприклад, постачальники мають певне місце розташування, деталі характеризуються вагою, проекти – черговістю виконання тощо.\nЗагалом властивості можуть бути як простими, так і складними, причому настільки простими або складними, наскільки це потрібно.\n\n\nДані та моделі даних\nДані насправді є заданими фактами, з яких можна логічно вивести інші факти.\nПродукти на основі мови SQL зайняли домінуюче становище на ринку. Однією з причин цього є те, що вони ґрунтуються на використанні формальної теорії, яка називається реляційною моделлю даних. Однак реляційна модель – не єдина можлива модель даних. Існують й інші моделі, але вони певною мірою пристосовані для спеціальних випадків, а не строго засновані на формальній логіці.\n\n\nМодель даних - це абстрактне, самодостатнє, логічне визначення об’єктів, операторів та інших елементів, що сукупно складають абстрактний інструмент доступу до даних, з якою взаємодіє користувач.\nРозділимо поняття моделі даних та її реалізації. Модель це те, про що користувачі повинні знати, а реалізація - це те, чого користувачі не повинні знати."
  },
  {
    "objectID": "par4.html",
    "href": "par4.html",
    "title": "Призначення баз данних",
    "section": "",
    "text": "У використанні баз даних є суттєві переваги у порівнянні з традиційним “бумажним” методом ведення обліку. Серед них:\n\nКомпактність. Немає необхідності у створенні та адмініструванні, можливо, дуже об’ємних паперових картотек.\nШвидкодія. Комп’ютер може вибирати та оновлювати дані набагато швидше за людину. Зокрема, з його допомогою можна швидко отримувати відповіді на довільні питання, що виникають у процесі роботи, не витрачаючи часу на візуальний огляд чи пошук вручну.\nНизькі трудовитрати. Відпадає потреба у стомлюючій роботі над картотекою вручну. Механічну роботу машини завжди виконують краще.\nАктуальність. У разі потреби під рукою будь-якої миті є точна, свіжа інформація.\nЗахист. Дані можуть бути захищені від випадкової втрати та несанкціонованого доступу.\n\nАдміністрування даних та адміністрування бази даних.\nПри централізованому управлінні на підприємстві, що використовує базу даних, є людина, яка несе основну відповідальність за дані підприємства. Це - адміністратор даних, або скорочено АД. Адміністратор повинен розбиратися в даних і розуміти потреби підприємства стосовно них на рівні вищої ланки, що управляє, в керівництві підприємством. До його обов’язків входить прийняття рішень про те, які дані необхідно вносити до бази даних насамперед, а також вироблення вимог щодо супроводу та обробки даних після їх внесення до бази даних. Прикладом таких вимог може бути розпорядження про те, хто і за яких обставин має право виконувати конкретні операції над тими чи іншими даними (тобто захист даних).\nТехнічний спеціаліст, відповідальний за реалізацію рішень адміністратора даних - це адміністратор бази даних, або АБД. Робота АБД полягає у створенні самих баз даних та організації технічного контролю, необхідного для здійснення рішень, прийнятих адміністратором даних. АБД несе також відповідальність за забезпечення необхідної швидкодії системи та її технічне обслуговування. Зазвичай у компанії є цілий штат таких спеціалістів.\nПереваги підходу, що передбачає використання бази даних: - Можливість спільного доступу до даних - Скорочення надмірності даних - Усунення суперечливості даних - Можливість підтримки транзакцій\nТранзакція (transaction) — це логічна одиниця роботи (точніше, логічна одиниця роботи бази даних), що включає кілька операцій бази даних (зокрема, кілька операцій модифікації даних).\nЗабезпечення цілісності даних\nЗавдання забезпечення цілісності полягає у гарантованій підтримці правильності даних у базі (наскільки це можливо). Протиріччя між двома записами, що становлять один “факт”, є прикладом втрати цілісності даних. Такі проблеми виникають унаслідок надмірності даних, або якщо БД містить неправильну інформацію. Централізоване управління базою даних дозволяє уникнути подібних проблем (наскільки це взагалі можливо). Для цього адміністратор даних визначає (а адміністратор бази даних реалізує) обмеження цілісності (integrity constraints), які застосовуватимуться за будь-якої спроби внести будь-які зміни до відповідних даних.\nОрганізація захисту даних\nЗавдяки повному контролю над базою даних адміністратор бази даних (безумовно, відповідно до вказівок адміністратора даних) може забезпечити доступ до неї тільки через певні канали. Для цього можуть встановлюватися обмеження захисту (security constraints), або правила, які контролюватимуться за будь-якої спроби доступу до конфіденційних даних.\nМожливість узгодження суперечливих вимог\nЗнаючи загальні вимоги всього підприємства (а не вимоги кожного окремого користувача), адміністратор бази даних може структурувати базу даних таким чином, щоб обслуговування було найкращим для підприємства.\nМожливість запровадження стандартизації Завдяки централізованому управлінню базою даних адміністратор бази даних (за вказівкою адміністратора даних) може забезпечити дотримання всіх необхідних стандартів, які регламентують представлення даних у системі. Стандарти можуть бути приватними, корпоративними, відомчими, промисловими, національними та міжнародними. Стандартизація представлення даних найважливіша з погляду обміну даними та його пересилання між системами."
  },
  {
    "objectID": "par5.html",
    "href": "par5.html",
    "title": "Незалежність баз данних",
    "section": "",
    "text": "Незалежність баз даних\nФізична незалежність даних означає, що фізичне розташування та організація даних може змінюватися, не викликаючи при цьому змін загальної логічної структури даних або прикладних програм.\nБазові складові, які забезпечують незалежність даних\nЩоб забезпечити незалежність даних повинна бути максимально можливо відділена модель даних від її реалізації.\nБезпосередня реалізація даних виконується системою керування баз даних (СКБД). У цій системі, щоб забезпечити незалежність даних потрібно реалізувати наступні елементи:\n• збережуване поле – це екземпляр, що містить інформацію про тип одного значущого елементу на основі якого формуються дані цього типу.\n• збережуваний запис – є набором зв’язаних збережуваних полів, визначених відповідними типами даних;\n• збережуваний файл – це є набір декількох екземплярів збережуваних записів, які мають однаковий тип.\nНижче зображено приклад збережуваної бази даних, яка містить збережувані поля, записи і файли. Ця база даних використовує одну таблицю (як приклад), в якій формується перелік абонентів з їх адресами та телефонними номерами.\n\n\n\nОсновні аспекти структур зберігання змінюваних даних\nНезалежність даних повинна максимально захищати застосунок від змін, що можуть виникати в даних. При активному використанні база даних може зростати і розвиватись. Якщо дані незалежні, то збільшення кількості даних не повинно негативно впливати на роботу застосунку.\nЗ метою захисту застосунку системи керування базами повинні враховувати наступні аспекти структури зберігання змінюваних даних.\nСпосіб представлення числових даних. Для кожного формату формується значення відповідних параметрів (вибір системи числення, кількість знаків після коми тощо)\nСпосіб представлення символьних даних. Важливим є використання відомих існуючих кодувань символів (ASCII, Unicode та інше).\nКорегування одиниць виміру для числових даних. Налаштування представлення числових даних у полях таблиці (метри, кілометри, дюйми тощо).\nСпособи кодування даних. Тут важливим є те, яким чином кодуються ті чи інші категорії даних. Наприклад, кольори можна кодувати цифрами, наборами біт, рядковими позначеннями тощо.\nПредставлення логічних полів як віртуальних. Недоцільно зберігати суми збережуваних полів, якщо їх можна обчислювати “на льоту” та відображати у логічних полях. Поля, які обчислюються, ще називають віртуальними полями (virtual), а обчислені значення називаються непрямими.\nЗабезпечення правильної структури збережуваних записів. Структура збережуваних записів передбачає одну з можливих операцій:\nоб’єднання інформативних полів декількох таблиць в одну таблицю. розбиття записів таблиці на декілька підтаблиць. Використовується у випадку, коли потрібно оптимізувати швидкодію шляхом перенесення рідковикористовуваних частин таблиці у більш повільні пристрої зчитування/запису.\nНаприклад, наступні дві таблиці можуть бути об’єднані в одну.\n\n\nОб’єднання таблиць у випадку інтеграції додатків\n\nВідповідно, навпаки, поля наступної таблиці можуть бути розбиті на частини. \nЗабезпечення представлення структури збережуваних файлів різними способами. (використання таблиць з індексами, використання послідовності (ланцюжка) покажчиків або використання асоціативних таблиць (хеш таблиць)). Усі способи повинні забезпечувати максимальну ефективність виконання застосунку i основну вимогу до збереження даних, а саме: жоден з способів збереження даних не повинен впливати на застосунок, що оперує цими даними."
  },
  {
    "objectID": "par6.html",
    "href": "par6.html",
    "title": "Реляційні та інші системи",
    "section": "",
    "text": "СУБД підтримують один із можливих типів моделей даних: ієрархічну, мережну і реляційну.\nІєрархічна модель організовує дані у вигляді деревоподібної структури. Особливості такої організації полягають у тому, що кілька вузлів нижчого рівня поєднуються з допомогою зв’язків із одним вуз¬лом вищого рівня. Прикладом ієрархічної моделі може бути будь-яка адміністративна структура. У цій моделі виділяють головний об’єкт, через який забезпечується доступ до інших об’єктів системи. Ієрархічна модель призначена для полегшення зберігання та пошуку записів, які можна організувати строго в ієрархічному вигляді.\nМережна модель дає можливість будь-якому об’єкту бути зв’язаним із будь-яким іншим об’єктом. Вона будується за принципом “головний і підлеглий тип одночасно”, тобто будь-який об’єкт може бути головним для кількох, і в той самий час може бути підлеглим для інших, Мережні моделі утворюють складні структури, що створює значні труднощі в разі необхідності їх модернізації або розвитку. Для мережної моделі характерний централізований спосіб обробки даних. На одному центральному комп’ютері, що називається сервером, є єдина копія бази даних. Доступ до даних здійснюється з допомогою віддаленого запиту або трансакції.\nРеляційна модель являє собою об’єкти та взаємозв’язки між ними у вигляді таблиць.\nСуттєвими перевагами реляційної моделі є:\n• простота представлення даних, оскільки таблиці явля¬ють собою звичний спосіб формування запитів; • отримання доступу до будь-яких даних будь-якого типу та одночасне використання кількох таблиць бази даних; • високий ступінь незалежності даних, оскільки інтер¬фейс користувача не зв’язаний із деталями фізичної структури пам’яті та стратегією доступу.\nУ файлах дані зберігаються в прямокутних таблицях такого вигляду:\n\n\n\n\n\nПоле 1\nПоле 2\n…\nПоле N\n\n\n\n\nЗапис1\n\n\n\n\n\n\nЗапис2\n\n\n\n\n\n\n…\n\n\n\n\n\n\nЗапис N\n\n\n\n\n\n\n\n\nРядки цих таблиць називаються записами, а стовпчики - по­лями. Усі записи поля мають один і той самий тип.СУБД має забезпечити введення до комп’ютера підготовлених даних, тобто імен полів, їх типів і величин."
  }
]